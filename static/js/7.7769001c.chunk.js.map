{"version":3,"sources":["views/MovieDetailsPage/MovieDetailsPage.js","services/moviesApi.js","views/MovieDetailsPage/MovieDetailsPage.module.css"],"names":["Reviews","lazy","Cast","MovieDetailsPage","history","useHistory","location","useLocation","movieId","useParams","useState","movie","setMovie","useRouteMatch","url","path","useEffect","movieDetailsGet","then","catch","error","type","onClick","push","state","from","className","s","btn","contentWrap","src","poster_path","alt","original_title","width","image","infoWrap","movieTitle","info","description","vote_average","overview","genres","map","genre","name","join","title","linkWrap","link","activeClassName","activeLink","to","pathname","backUrl","searchValue","fallback","API_KEY","BASE_URL","popularMovieGet","time","page","axios","get","response","data","results","requestMovieSearch","query","movieReviewsGet","movieCastGet","cast","module","exports"],"mappings":"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","file":"static/js/7.7769001c.chunk.js","sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MovieDetailsPage.module.css';\nimport { movieDetailsGet } from '../../services/moviesApi';\nimport PreLoader from '../../components/Loader/Loader';\n\n// import Reviews from '../../components/Reviews';\n// import Cast from '../../components/Cast';\n\nconst Reviews = lazy(() => import('../../components/Reviews'));\nconst Cast = lazy(() => import('../../components/Cast'));\n\nconst MovieDetailsPage = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { url, path } = useRouteMatch();\n\n  // const { title, genres, vote_average, overview, poster_path } = movie;\n\n  useEffect(() => {\n    movieDetailsGet(movieId)\n      .then(setMovie)\n      .catch(error => error);\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from?.location ?? '/movies');\n  };\n\n  return (\n    <div>\n      <button type=\"submit\" onClick={onGoBack} className={s.btn}>\n        BACK\n      </button>\n      {movie && (\n        <div className={s.contentWrap}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.original_title}\n            width=\"300\"\n            className={s.image}\n          />\n          <div className={s.infoWrap}>\n            <h2 className={s.movieTitle}>{movie.original_title}</h2>\n            <p className={s.info}>\n              User score:\n              <span className={s.description}>{movie.vote_average}</span>\n            </p>\n            <p className={s.info}>\n              Overview:\n              <span className={s.description}>{movie.overview}</span>\n            </p>\n            <p className={s.info}>\n              Genres:\n              <span className={s.description}>\n                {movie.genres.map(genre => genre.name).join(' / ')}\n              </span>\n            </p>\n            <h3 className={s.title}>Additional Information</h3>\n            <div className={s.linkWrap}>\n              <NavLink\n                className={s.link}\n                activeClassName={s.activeLink}\n                to={{\n                  pathname: `${url}/cast`,\n                  state: {\n                    backUrl: `${location.state?.searchValue ? `/movies` : `/`}`,\n                    searchValue: location.state?.searchValue ?? '',\n                  },\n                }}\n              >\n                Cast\n              </NavLink>\n              <NavLink\n                className={s.link}\n                activeClassName={s.activeLink}\n                to={{\n                  pathname: `${url}/reviews`,\n                  state: {\n                    backUrl: `${location.state?.searchValue ? `/movies` : `/`}`,\n                    searchValue: location.state?.searchValue ?? '',\n                  },\n                }}\n              >\n                Reviews\n              </NavLink>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Suspense fallback={<PreLoader />}>\n        <Switch>\n          <Route path={`${path}/cast`}>{movie && <Cast />}</Route>\n          <Route path={`${path}/reviews`}>{movie && <Reviews />}</Route>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '1d492e008148c42709362e98500fe1a3';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n\nexport function popularMovieGet(time = 'week', page = 1) {\n  return axios\n    .get(`${BASE_URL}trending/movie/${time}?api_key=${API_KEY}&page=${page}`)\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function requestMovieSearch(query, page = 1) {\n  return axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}&include_adult=false`,\n    )\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function movieDetailsGet(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data)\n    .catch(error => error);\n}\n\nexport function movieReviewsGet(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    )\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function movieCastGet(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    )\n    .then(response => response.data.cast)\n    .catch(error => error);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"MovieDetailsPage_contentWrap__3elVc\",\"btn\":\"MovieDetailsPage_btn__urAdY\",\"infoWrap\":\"MovieDetailsPage_infoWrap__RWi4B\",\"info\":\"MovieDetailsPage_info__2D1ex\",\"description\":\"MovieDetailsPage_description__2XI5s\",\"movieTitle\":\"MovieDetailsPage_movieTitle__36upY\",\"image\":\"MovieDetailsPage_image__Z1ERs\",\"title\":\"MovieDetailsPage_title__VrDbs\",\"linkWrap\":\"MovieDetailsPage_linkWrap__1NPxF\",\"link\":\"MovieDetailsPage_link__bjx_3\",\"activeLink\":\"MovieDetailsPage_activeLink__2Dj_x MovieDetailsPage_link__bjx_3\"};"],"sourceRoot":""}