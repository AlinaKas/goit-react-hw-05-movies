{"version":3,"sources":["views/MovieDetailsPage/MovieDetailsPage.js","services/moviesApi.js","images/default_error.png","views/MovieDetailsPage/MovieDetailsPage.module.css"],"names":["Reviews","lazy","Cast","MovieDetailsPage","history","useHistory","location","useLocation","movieId","useParams","useState","movie","setMovie","useRouteMatch","url","path","useEffect","movieDetailsGet","then","catch","error","type","onClick","push","state","from","className","s","btn","contentWrap","src","poster_path","poster_default","alt","original_title","width","image","infoWrap","movieTitle","info","rating","vote_average","description","overview","genres","map","genre","name","join","title","linkWrap","link","activeClassName","activeLink","to","pathname","label","backUrl","searchValue","fallback","API_KEY","BASE_URL","popularMovieGet","time","page","axios","get","response","data","results","requestMovieSearch","query","movieReviewsGet","movieCastGet","cast","module","exports"],"mappings":"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","file":"static/js/6.9017770d.chunk.js","sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MovieDetailsPage.module.css';\nimport { movieDetailsGet } from '../../services/moviesApi';\nimport PreLoader from '../../components/Loader/Loader';\nimport poster_default from '../../images/default_error.png';\n\n// import Reviews from '../../components/Reviews';\n// import Cast from '../../components/Cast';\n\nconst Reviews = lazy(() => import('../../components/Reviews'));\nconst Cast = lazy(() => import('../../components/Cast'));\n\nconst MovieDetailsPage = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { url, path } = useRouteMatch();\n\n  // let poster = movie.poster_path\n  //   ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n  //   : poster_default;\n\n  useEffect(() => {\n    movieDetailsGet(movieId)\n      .then(setMovie)\n      .catch(error => error);\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from?.location ?? '/movies');\n  };\n\n  return (\n    <div>\n      <button type=\"submit\" onClick={onGoBack} className={s.btn}>\n        BACK\n      </button>\n      {movie && (\n        <div className={s.contentWrap}>\n          <img\n            src={\n              `https://image.tmdb.org/t/p/w300${movie.poster_path}` ??\n              poster_default\n            }\n            alt={movie.original_title}\n            width=\"300\"\n            className={s.image}\n          />\n          <div className={s.infoWrap}>\n            <h2 className={s.movieTitle}>{movie.original_title}</h2>\n            <p className={s.info}>\n              User score:\n              <span className={s.rating}>{movie.vote_average}/10</span>\n            </p>\n            <p className={s.info}>\n              Overview:\n              <span className={s.description}>{movie.overview}</span>\n            </p>\n            <p className={s.info}>\n              Genres:\n              <span className={s.description}>\n                {movie.genres.map(genre => genre.name).join(' / ')}\n              </span>\n            </p>\n            <h3 className={s.title}>Additional Information</h3>\n            <div className={s.linkWrap}>\n              <NavLink\n                className={s.link}\n                activeClassName={s.activeLink}\n                to={{\n                  pathname: `${url}/cast`,\n                  state: {\n                    state: {\n                      from: {\n                        location: location?.state?.from?.location ?? '/',\n                        label: location?.state?.from?.label ?? 'Back to Home',\n                      },\n                    },\n                  },\n                }}\n              >\n                Cast\n              </NavLink>\n              <NavLink\n                className={s.link}\n                activeClassName={s.activeLink}\n                to={{\n                  pathname: `${url}/reviews`,\n                  state: {\n                    backUrl: `${location.state?.searchValue ? `/movies` : `/`}`,\n                    searchValue: location.state?.searchValue ?? '',\n                  },\n                }}\n              >\n                Reviews\n              </NavLink>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Suspense fallback={<PreLoader />}>\n        <Switch>\n          <Route path={`${path}/cast`}>{movie && <Cast />}</Route>\n          <Route path={`${path}/reviews`}>{movie && <Reviews />}</Route>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '1d492e008148c42709362e98500fe1a3';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n\nexport function popularMovieGet(time = 'week', page = 1) {\n  return axios\n    .get(`${BASE_URL}trending/movie/${time}?api_key=${API_KEY}&page=${page}`)\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function requestMovieSearch(query, page = 1) {\n  return axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}&include_adult=false`,\n    )\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function movieDetailsGet(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data)\n    .catch(error => error);\n}\n\nexport function movieReviewsGet(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    )\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function movieCastGet(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    )\n    .then(response => response.data.cast)\n    .catch(error => error);\n}\n","export default __webpack_public_path__ + \"static/media/default_error.6ddcc1dc.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrap\":\"MovieDetailsPage_contentWrap__3elVc\",\"btn\":\"MovieDetailsPage_btn__urAdY\",\"infoWrap\":\"MovieDetailsPage_infoWrap__RWi4B\",\"info\":\"MovieDetailsPage_info__2D1ex\",\"rating\":\"MovieDetailsPage_rating__JVlEz MovieDetailsPage_info__2D1ex\",\"description\":\"MovieDetailsPage_description__2XI5s\",\"movieTitle\":\"MovieDetailsPage_movieTitle__36upY\",\"image\":\"MovieDetailsPage_image__Z1ERs\",\"title\":\"MovieDetailsPage_title__VrDbs\",\"linkWrap\":\"MovieDetailsPage_linkWrap__1NPxF\",\"link\":\"MovieDetailsPage_link__bjx_3\",\"activeLink\":\"MovieDetailsPage_activeLink__2Dj_x MovieDetailsPage_link__bjx_3\"};"],"sourceRoot":""}