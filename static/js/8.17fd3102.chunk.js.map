{"version":3,"sources":["services/moviesApi.js","components/MovieGallery/MovieGallery.module.css","components/MovieGallery/MovieGallery.js","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","views/MoviesSearchPage/MoviesSearchPage.js"],"names":["API_KEY","BASE_URL","getPopularMovie","time","page","axios","get","then","response","data","results","catch","error","searchRequestMovie","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","cast","module","exports","MovieGalleryItem","lazy","MovieGallery","movies","className","s","list","map","item","movie","id","Searchbar","onSubmitForm","useState","searchQuery","setSearchQuery","handleSearchChange","useCallback","e","currentTarget","value","toLowerCase","handleSearchSubmit","preventDefault","trim","toast","info","theme","searchbar","form","onSubmit","type","button","onClick","input","autoComplete","autoFocus","placeholder","onChange","MoviesSearchPage","setQuery","setMovies","history","useHistory","location","useLocation","useEffect","search","newSearch","URLSearchParams","getMovies","length","getSearchValue","push","autoClose"],"mappings":"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","file":"static/js/8.17fd3102.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1d492e008148c42709362e98500fe1a3';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n\nexport function getPopularMovie(time = 'week', page = 1) {\n  return axios\n    .get(`${BASE_URL}trending/movie/${time}?api_key=${API_KEY}&page=${page}`)\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function searchRequestMovie(query, page = 1) {\n  return axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}&include_adult=false`,\n    )\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function getMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data)\n    .catch(error => error);\n}\n\nexport function getMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    )\n    .then(response => response.data.results)\n    .catch(error => error);\n}\n\nexport function getMovieCast(movieId) {\n  return axios\n    .get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    )\n    .then(response => response.data.cast)\n    .catch(error => error);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieGallery_list__298P6\"};","import React, { lazy } from 'react';\n// import MovieGalleryItem from '../MovieGalleryItem';\nimport s from './MovieGallery.module.css';\n\nconst MovieGalleryItem = lazy(() =>\n  import('../MovieGalleryItem' /* webpackChunkName: \"movie\" */),\n);\n\nexport default function MovieGallery({ movies }) {\n  return (\n    <ul className={s.list}>\n      {movies.map(item => (\n        <MovieGalleryItem movie={item} key={item.id} />\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__jo466\",\"form\":\"Searchbar_form__XuKjc\",\"button\":\"Searchbar_button__MhnaU\",\"button-label\":\"Searchbar_button-label__14f0Y\",\"input\":\"Searchbar_input__2C4aO\"};","import React, { useState, useCallback } from 'react';\nimport s from './Searchbar.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Searchbar({ onSubmitForm }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchChange = useCallback(e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  }, []);\n\n  const handleSearchSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (searchQuery.trim() === '') {\n        return toast.info('Enter your request', {\n          theme: 'dark',\n        });\n      }\n      onSubmitForm(searchQuery);\n      setSearchQuery('');\n    },\n    [searchQuery, onSubmitForm],\n  );\n\n  return (\n    <>\n      <header className={s.searchbar}>\n        <form className={s.form} onSubmit={handleSearchSubmit}>\n          <button\n            type=\"submit\"\n            className={s.button}\n            onClick={handleSearchSubmit}\n          ></button>\n\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n          />\n        </form>\n      </header>\n    </>\n  );\n}\n\nexport default Searchbar;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport { searchRequestMovie } from '../../services/moviesApi';\n\nimport Searchbar from '../../components/Searchbar';\nimport MovieGallery from '../../components/MovieGallery';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MoviesSearchPage = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n  // const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (location.search === '') {\n      return;\n    }\n    const newSearch = new URLSearchParams(location.search).get('query');\n    setQuery(newSearch);\n  }, [location.search]);\n\n  useEffect(() => {\n    query && getMovies();\n  }, [query]);\n\n  const getMovies = () => {\n    searchRequestMovie(query)\n      .then(results => {\n        if (results.length === 0) {\n          toast.error(`No movies for your request ${query}`);\n          return;\n        }\n        setMovies(results);\n      })\n      .catch(error => error);\n  };\n\n  const getSearchValue = useCallback(\n    query => {\n      setQuery(query);\n      // setMovies([]);\n      history.push({ ...location, search: `query=${query}` });\n    },\n    [history, location],\n  );\n\n  return (\n    <>\n      <Searchbar onSubmitForm={getSearchValue} />\n      {movies && <MovieGallery movies={movies} />}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default MoviesSearchPage;\n"],"sourceRoot":""}